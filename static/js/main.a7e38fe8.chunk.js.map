{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","alphabet","numeric","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAW,OACXC,EAAU,SA2BT,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAElC,QACE,OAAO,MAKXE,GACFI,EAAcK,UAGTL,EAMcM,CAAiBjB,EACpC,CAAEK,YAAWE,eAOf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAcJ,IAE9BoB,QAAS,kBAAMf,EAAaL,IAN9B,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAcH,IAE9BmB,QAAS,kBAAMf,EAAaJ,IAN9B,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAab,IAEjBc,QAAS,kBAAMb,GAAeD,IANhC,sBAWEA,GAAcF,IACd,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA7CI,WACZf,EAAa,IACbE,GAAc,IAwCR,sBAUJ,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCxGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7e38fe8.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst alphabet = 'name';\nconst numeric = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case alphabet:\n          return good1.localeCompare(good2);\n\n        case numeric:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, isReversed });\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortField !== alphabet },\n          )}\n          onClick={() => setSortField(alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortField !== numeric },\n          )}\n          onClick={() => setSortField(numeric)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}